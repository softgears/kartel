#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kartel.Domain.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Kartel")]
	public partial class KartelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserPhone(Kartel.Domain.Entities.UserPhone instance);
    partial void UpdateUserPhone(Kartel.Domain.Entities.UserPhone instance);
    partial void DeleteUserPhone(Kartel.Domain.Entities.UserPhone instance);
    partial void InsertUserOccupationInfo(Kartel.Domain.Entities.UserOccupationInfo instance);
    partial void UpdateUserOccupationInfo(Kartel.Domain.Entities.UserOccupationInfo instance);
    partial void DeleteUserOccupationInfo(Kartel.Domain.Entities.UserOccupationInfo instance);
    partial void InsertUser(Kartel.Domain.Entities.User instance);
    partial void UpdateUser(Kartel.Domain.Entities.User instance);
    partial void DeleteUser(Kartel.Domain.Entities.User instance);
    partial void InsertUserLegalInfo(Kartel.Domain.Entities.UserLegalInfo instance);
    partial void UpdateUserLegalInfo(Kartel.Domain.Entities.UserLegalInfo instance);
    partial void DeleteUserLegalInfo(Kartel.Domain.Entities.UserLegalInfo instance);
    partial void InsertCategory(Kartel.Domain.Entities.Category instance);
    partial void UpdateCategory(Kartel.Domain.Entities.Category instance);
    partial void DeleteCategory(Kartel.Domain.Entities.Category instance);
    partial void InsertUserCategory(Kartel.Domain.Entities.UserCategory instance);
    partial void UpdateUserCategory(Kartel.Domain.Entities.UserCategory instance);
    partial void DeleteUserCategory(Kartel.Domain.Entities.UserCategory instance);
    partial void InsertProductImage(Kartel.Domain.Entities.ProductImage instance);
    partial void UpdateProductImage(Kartel.Domain.Entities.ProductImage instance);
    partial void DeleteProductImage(Kartel.Domain.Entities.ProductImage instance);
    partial void InsertProduct(Kartel.Domain.Entities.Product instance);
    partial void UpdateProduct(Kartel.Domain.Entities.Product instance);
    partial void DeleteProduct(Kartel.Domain.Entities.Product instance);
    partial void InsertHotProduct(Kartel.Domain.Entities.HotProduct instance);
    partial void UpdateHotProduct(Kartel.Domain.Entities.HotProduct instance);
    partial void DeleteHotProduct(Kartel.Domain.Entities.HotProduct instance);
    partial void InsertTender(Kartel.Domain.Entities.Tender instance);
    partial void UpdateTender(Kartel.Domain.Entities.Tender instance);
    partial void DeleteTender(Kartel.Domain.Entities.Tender instance);
    partial void InsertTenderOffer(Kartel.Domain.Entities.TenderOffer instance);
    partial void UpdateTenderOffer(Kartel.Domain.Entities.TenderOffer instance);
    partial void DeleteTenderOffer(Kartel.Domain.Entities.TenderOffer instance);
    partial void InsertStaticPage(Kartel.Domain.Entities.StaticPage instance);
    partial void UpdateStaticPage(Kartel.Domain.Entities.StaticPage instance);
    partial void DeleteStaticPage(Kartel.Domain.Entities.StaticPage instance);
    partial void InsertBanner(Kartel.Domain.Entities.Banner instance);
    partial void UpdateBanner(Kartel.Domain.Entities.Banner instance);
    partial void DeleteBanner(Kartel.Domain.Entities.Banner instance);
    partial void InsertMailNotificationMessage(Kartel.Domain.Entities.MailNotificationMessage instance);
    partial void UpdateMailNotificationMessage(Kartel.Domain.Entities.MailNotificationMessage instance);
    partial void DeleteMailNotificationMessage(Kartel.Domain.Entities.MailNotificationMessage instance);
    partial void InsertCategoryMapItem(Kartel.Domain.Entities.CategoryMapItem instance);
    partial void UpdateCategoryMapItem(Kartel.Domain.Entities.CategoryMapItem instance);
    partial void DeleteCategoryMapItem(Kartel.Domain.Entities.CategoryMapItem instance);
    partial void InsertCategoryMap(Kartel.Domain.Entities.CategoryMap instance);
    partial void UpdateCategoryMap(Kartel.Domain.Entities.CategoryMap instance);
    partial void DeleteCategoryMap(Kartel.Domain.Entities.CategoryMap instance);
    partial void InsertBill(Kartel.Domain.Entities.Bill instance);
    partial void UpdateBill(Kartel.Domain.Entities.Bill instance);
    partial void DeleteBill(Kartel.Domain.Entities.Bill instance);
    partial void InsertSetting(Kartel.Domain.Entities.Setting instance);
    partial void UpdateSetting(Kartel.Domain.Entities.Setting instance);
    partial void DeleteSetting(Kartel.Domain.Entities.Setting instance);
    partial void InsertUserBanner(Kartel.Domain.Entities.UserBanner instance);
    partial void UpdateUserBanner(Kartel.Domain.Entities.UserBanner instance);
    partial void DeleteUserBanner(Kartel.Domain.Entities.UserBanner instance);
    #endregion
		
		public KartelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KartelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KartelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KartelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.UserPhone> UserPhones
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.UserPhone>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.UserOccupationInfo> UserOccupationInfos
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.UserOccupationInfo>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.User> Users
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.User>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.UserLegalInfo> UserLegalInfos
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.UserLegalInfo>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.Category> Categories
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.Category>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.UserCategory> UserCategories
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.UserCategory>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.ProductImage> ProductImages
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.ProductImage>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.Product> Products
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.Product>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.HotProduct> HotProducts
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.HotProduct>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.Tender> Tenders
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.Tender>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.TenderOffer> TenderOffers
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.TenderOffer>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.StaticPage> StaticPages
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.StaticPage>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.Banner> Banners
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.Banner>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.MailNotificationMessage> MailNotificationMessages
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.MailNotificationMessage>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.CategoryMapItem> CategoryMapItems
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.CategoryMapItem>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.CategoryMap> CategoryMaps
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.CategoryMap>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.Bill> Bills
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.Bill>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.Setting> Settings
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.Setting>();
			}
		}
		
		public System.Data.Linq.Table<Kartel.Domain.Entities.UserBanner> UserBanners
		{
			get
			{
				return this.GetTable<Kartel.Domain.Entities.UserBanner>();
			}
		}
	}
}
namespace Kartel.Domain.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPhones")]
	public partial class UserPhone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _CountryCode;
		
		private string _CityCode;
		
		private string _PhoneNumber;
		
		private short _Type;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCityCodeChanging(string value);
    partial void OnCityCodeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnTypeChanging(short value);
    partial void OnTypeChanged();
    #endregion
		
		public UserPhone()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="NVarChar(5)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityCode", DbType="NVarChar(10)")]
		public string CityCode
		{
			get
			{
				return this._CityCode;
			}
			set
			{
				if ((this._CityCode != value))
				{
					this.OnCityCodeChanging(value);
					this.SendPropertyChanging();
					this._CityCode = value;
					this.SendPropertyChanged("CityCode");
					this.OnCityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="SmallInt NOT NULL")]
		public short Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPhone", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPhones.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPhones.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserOccupationInfo")]
	public partial class UserOccupationInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private bool _Importer;
		
		private bool _OEM;
		
		private bool _Whoseller;
		
		private bool _Exporter;
		
		private bool _ODM;
		
		private bool _SingleSeller;
		
		private bool _Developer;
		
		private bool _Agent;
		
		private bool _Distributor;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnImporterChanging(bool value);
    partial void OnImporterChanged();
    partial void OnOEMChanging(bool value);
    partial void OnOEMChanged();
    partial void OnWhosellerChanging(bool value);
    partial void OnWhosellerChanged();
    partial void OnExporterChanging(bool value);
    partial void OnExporterChanged();
    partial void OnODMChanging(bool value);
    partial void OnODMChanged();
    partial void OnSingleSellerChanging(bool value);
    partial void OnSingleSellerChanged();
    partial void OnDeveloperChanging(bool value);
    partial void OnDeveloperChanged();
    partial void OnAgentChanging(bool value);
    partial void OnAgentChanged();
    partial void OnDistributorChanging(bool value);
    partial void OnDistributorChanged();
    #endregion
		
		public UserOccupationInfo()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importer", DbType="Bit NOT NULL")]
		public bool Importer
		{
			get
			{
				return this._Importer;
			}
			set
			{
				if ((this._Importer != value))
				{
					this.OnImporterChanging(value);
					this.SendPropertyChanging();
					this._Importer = value;
					this.SendPropertyChanged("Importer");
					this.OnImporterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OEM", DbType="Bit NOT NULL")]
		public bool OEM
		{
			get
			{
				return this._OEM;
			}
			set
			{
				if ((this._OEM != value))
				{
					this.OnOEMChanging(value);
					this.SendPropertyChanging();
					this._OEM = value;
					this.SendPropertyChanged("OEM");
					this.OnOEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Whoseller", DbType="Bit NOT NULL")]
		public bool Whoseller
		{
			get
			{
				return this._Whoseller;
			}
			set
			{
				if ((this._Whoseller != value))
				{
					this.OnWhosellerChanging(value);
					this.SendPropertyChanging();
					this._Whoseller = value;
					this.SendPropertyChanged("Whoseller");
					this.OnWhosellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exporter", DbType="Bit NOT NULL")]
		public bool Exporter
		{
			get
			{
				return this._Exporter;
			}
			set
			{
				if ((this._Exporter != value))
				{
					this.OnExporterChanging(value);
					this.SendPropertyChanging();
					this._Exporter = value;
					this.SendPropertyChanged("Exporter");
					this.OnExporterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODM", DbType="Bit NOT NULL")]
		public bool ODM
		{
			get
			{
				return this._ODM;
			}
			set
			{
				if ((this._ODM != value))
				{
					this.OnODMChanging(value);
					this.SendPropertyChanging();
					this._ODM = value;
					this.SendPropertyChanged("ODM");
					this.OnODMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleSeller", DbType="Bit NOT NULL")]
		public bool SingleSeller
		{
			get
			{
				return this._SingleSeller;
			}
			set
			{
				if ((this._SingleSeller != value))
				{
					this.OnSingleSellerChanging(value);
					this.SendPropertyChanging();
					this._SingleSeller = value;
					this.SendPropertyChanged("SingleSeller");
					this.OnSingleSellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Developer", DbType="Bit NOT NULL")]
		public bool Developer
		{
			get
			{
				return this._Developer;
			}
			set
			{
				if ((this._Developer != value))
				{
					this.OnDeveloperChanging(value);
					this.SendPropertyChanging();
					this._Developer = value;
					this.SendPropertyChanged("Developer");
					this.OnDeveloperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agent", DbType="Bit NOT NULL")]
		public bool Agent
		{
			get
			{
				return this._Agent;
			}
			set
			{
				if ((this._Agent != value))
				{
					this.OnAgentChanging(value);
					this.SendPropertyChanging();
					this._Agent = value;
					this.SendPropertyChanged("Agent");
					this.OnAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distributor", DbType="Bit NOT NULL")]
		public bool Distributor
		{
			get
			{
				return this._Distributor;
			}
			set
			{
				if ((this._Distributor != value))
				{
					this.OnDistributorChanging(value);
					this.SendPropertyChanging();
					this._Distributor = value;
					this.SendPropertyChanged("Distributor");
					this.OnDistributorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserOccupationInfo", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserOccupationInfos = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserOccupationInfos = this;
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Login;
		
		private string _PasswordHash;
		
		private string _Subdomain;
		
		private string _Company;
		
		private string _Brand;
		
		private string _LogoUrl;
		
		private string _FIO;
		
		private string _FIOImg;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _CellPhone;
		
		private string _Skype;
		
		private string _ICQ;
		
		private string _Url;
		
		private string _Country;
		
		private string _Region;
		
		private string _City;
		
		private string _Address;
		
		private string _ZIP;
		
		private string _ListWork;
		
		private string _People;
		
		private string _Capital;
		
		private string _Money;
		
		private string _About;
		
		private string _Mainproduct;
		
		private string _Geography;
		
		private string _Certificates;
		
		private string _License;
		
		private string _Dealer;
		
		private string _CertificateCompany;
		
		private string _CertificateCountry;
		
		private string _CertificateAddress;
		
		private string _CertificateDirector;
		
		private string _CertificateNumber;
		
		private string _CertificateInn;
		
		private string _CertificateDate;
		
		private string _CertificateOpf;
		
		private string _CartificateU;
		
		private string _CertificateCapital;
		
		private string _Tarif;
		
		private System.Nullable<System.DateTime> _TariffExpiration;
		
		private System.Data.Linq.Binary _TariffMoney;
		
		private string _TariffTmp;
		
		private string _Activate;
		
		private int _ConfigSave2Week;
		
		private string _LoggedIP;
		
		private System.Nullable<System.DateTime> _LoggedDate;
		
		private int _Administrator;
		
		private System.DateTime _Date;
		
		private string _Design;
		
		private string _ListCertificate;
		
		private int _BannerPeriod;
		
		private string _PostCode;
		
		private bool _UniSenderActivated;
		
		private int _AvailableHotProductsShows;
		
		private EntitySet<UserPhone> _UserPhones;
		
		private EntityRef<UserOccupationInfo> _UserOccupationInfos;
		
		private EntityRef<UserLegalInfo> _UserLegalInfos;
		
		private EntitySet<UserCategory> _UserCategories;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Tender> _Tenders;
		
		private EntitySet<TenderOffer> _TenderOffers;
		
		private EntitySet<Bill> _Bills;
		
		private EntityRef<UserBanner> _Banner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSubdomainChanging(string value);
    partial void OnSubdomainChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnLogoUrlChanging(string value);
    partial void OnLogoUrlChanged();
    partial void OnFIOChanging(string value);
    partial void OnFIOChanged();
    partial void OnFIOImgChanging(string value);
    partial void OnFIOImgChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnICQChanging(string value);
    partial void OnICQChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZIPChanging(string value);
    partial void OnZIPChanged();
    partial void OnListWorkChanging(string value);
    partial void OnListWorkChanged();
    partial void OnPeopleChanging(string value);
    partial void OnPeopleChanged();
    partial void OnCapitalChanging(string value);
    partial void OnCapitalChanged();
    partial void OnMoneyChanging(string value);
    partial void OnMoneyChanged();
    partial void OnAboutChanging(string value);
    partial void OnAboutChanged();
    partial void OnMainproductChanging(string value);
    partial void OnMainproductChanged();
    partial void OnGeographyChanging(string value);
    partial void OnGeographyChanged();
    partial void OnCertificatesChanging(string value);
    partial void OnCertificatesChanged();
    partial void OnLicenseChanging(string value);
    partial void OnLicenseChanged();
    partial void OnDealerChanging(string value);
    partial void OnDealerChanged();
    partial void OnCertificateCompanyChanging(string value);
    partial void OnCertificateCompanyChanged();
    partial void OnCertificateCountryChanging(string value);
    partial void OnCertificateCountryChanged();
    partial void OnCertificateAddressChanging(string value);
    partial void OnCertificateAddressChanged();
    partial void OnCertificateDirectorChanging(string value);
    partial void OnCertificateDirectorChanged();
    partial void OnCertificateNumberChanging(string value);
    partial void OnCertificateNumberChanged();
    partial void OnCertificateInnChanging(string value);
    partial void OnCertificateInnChanged();
    partial void OnCertificateDateChanging(string value);
    partial void OnCertificateDateChanged();
    partial void OnCertificateOpfChanging(string value);
    partial void OnCertificateOpfChanged();
    partial void OnCartificateUChanging(string value);
    partial void OnCartificateUChanged();
    partial void OnCertificateCapitalChanging(string value);
    partial void OnCertificateCapitalChanged();
    partial void OnTarifChanging(string value);
    partial void OnTarifChanged();
    partial void OnTariffExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnTariffExpirationChanged();
    partial void OnTariffMoneyChanging(System.Data.Linq.Binary value);
    partial void OnTariffMoneyChanged();
    partial void OnTariffTmpChanging(string value);
    partial void OnTariffTmpChanged();
    partial void OnActivateChanging(string value);
    partial void OnActivateChanged();
    partial void OnConfigSave2WeekChanging(int value);
    partial void OnConfigSave2WeekChanged();
    partial void OnLoggedIPChanging(string value);
    partial void OnLoggedIPChanged();
    partial void OnLoggedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoggedDateChanged();
    partial void OnAdministratorChanging(int value);
    partial void OnAdministratorChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDesignChanging(string value);
    partial void OnDesignChanged();
    partial void OnListCertificateChanging(string value);
    partial void OnListCertificateChanged();
    partial void OnBannerPeriodChanging(int value);
    partial void OnBannerPeriodChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnUniSenderActivatedChanging(bool value);
    partial void OnUniSenderActivatedChanged();
    partial void OnAvailableHotProductsShowsChanging(int value);
    partial void OnAvailableHotProductsShowsChanged();
    #endregion
		
		public User()
		{
			this._UserPhones = new EntitySet<UserPhone>(new Action<UserPhone>(this.attach_UserPhones), new Action<UserPhone>(this.detach_UserPhones));
			this._UserOccupationInfos = default(EntityRef<UserOccupationInfo>);
			this._UserLegalInfos = default(EntityRef<UserLegalInfo>);
			this._UserCategories = new EntitySet<UserCategory>(new Action<UserCategory>(this.attach_UserCategories), new Action<UserCategory>(this.detach_UserCategories));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Tenders = new EntitySet<Tender>(new Action<Tender>(this.attach_Tenders), new Action<Tender>(this.detach_Tenders));
			this._TenderOffers = new EntitySet<TenderOffer>(new Action<TenderOffer>(this.attach_TenderOffers), new Action<TenderOffer>(this.detach_TenderOffers));
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Banner = default(EntityRef<UserBanner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subdomain", DbType="VarChar(255)")]
		public string Subdomain
		{
			get
			{
				return this._Subdomain;
			}
			set
			{
				if ((this._Subdomain != value))
				{
					this.OnSubdomainChanging(value);
					this.SendPropertyChanging();
					this._Subdomain = value;
					this.SendPropertyChanged("Subdomain");
					this.OnSubdomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(255)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(255)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoUrl", DbType="VarChar(50)")]
		public string LogoUrl
		{
			get
			{
				return this._LogoUrl;
			}
			set
			{
				if ((this._LogoUrl != value))
				{
					this.OnLogoUrlChanging(value);
					this.SendPropertyChanging();
					this._LogoUrl = value;
					this.SendPropertyChanged("LogoUrl");
					this.OnLogoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", DbType="VarChar(255)")]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this.OnFIOChanging(value);
					this.SendPropertyChanging();
					this._FIO = value;
					this.SendPropertyChanged("FIO");
					this.OnFIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIOImg", DbType="VarChar(50)")]
		public string FIOImg
		{
			get
			{
				return this._FIOImg;
			}
			set
			{
				if ((this._FIOImg != value))
				{
					this.OnFIOImgChanging(value);
					this.SendPropertyChanging();
					this._FIOImg = value;
					this.SendPropertyChanged("FIOImg");
					this.OnFIOImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(200)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(200)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="VarChar(20)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="VarChar(100)")]
		public string Skype
		{
			get
			{
				return this._Skype;
			}
			set
			{
				if ((this._Skype != value))
				{
					this.OnSkypeChanging(value);
					this.SendPropertyChanging();
					this._Skype = value;
					this.SendPropertyChanged("Skype");
					this.OnSkypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICQ", DbType="VarChar(10)")]
		public string ICQ
		{
			get
			{
				return this._ICQ;
			}
			set
			{
				if ((this._ICQ != value))
				{
					this.OnICQChanging(value);
					this.SendPropertyChanging();
					this._ICQ = value;
					this.SendPropertyChanged("ICQ");
					this.OnICQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(100)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(50)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZIP", DbType="VarChar(10)")]
		public string ZIP
		{
			get
			{
				return this._ZIP;
			}
			set
			{
				if ((this._ZIP != value))
				{
					this.OnZIPChanging(value);
					this.SendPropertyChanging();
					this._ZIP = value;
					this.SendPropertyChanged("ZIP");
					this.OnZIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListWork", DbType="VarChar(255)")]
		public string ListWork
		{
			get
			{
				return this._ListWork;
			}
			set
			{
				if ((this._ListWork != value))
				{
					this.OnListWorkChanging(value);
					this.SendPropertyChanging();
					this._ListWork = value;
					this.SendPropertyChanged("ListWork");
					this.OnListWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_People", DbType="VarChar(255)")]
		public string People
		{
			get
			{
				return this._People;
			}
			set
			{
				if ((this._People != value))
				{
					this.OnPeopleChanging(value);
					this.SendPropertyChanging();
					this._People = value;
					this.SendPropertyChanged("People");
					this.OnPeopleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capital", DbType="VarChar(255)")]
		public string Capital
		{
			get
			{
				return this._Capital;
			}
			set
			{
				if ((this._Capital != value))
				{
					this.OnCapitalChanging(value);
					this.SendPropertyChanging();
					this._Capital = value;
					this.SendPropertyChanged("Capital");
					this.OnCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="VarChar(255)")]
		public string Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_About", DbType="VarChar(MAX)")]
		public string About
		{
			get
			{
				return this._About;
			}
			set
			{
				if ((this._About != value))
				{
					this.OnAboutChanging(value);
					this.SendPropertyChanging();
					this._About = value;
					this.SendPropertyChanged("About");
					this.OnAboutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mainproduct", DbType="VarChar(MAX)")]
		public string Mainproduct
		{
			get
			{
				return this._Mainproduct;
			}
			set
			{
				if ((this._Mainproduct != value))
				{
					this.OnMainproductChanging(value);
					this.SendPropertyChanging();
					this._Mainproduct = value;
					this.SendPropertyChanged("Mainproduct");
					this.OnMainproductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Geography", DbType="VarChar(MAX)")]
		public string Geography
		{
			get
			{
				return this._Geography;
			}
			set
			{
				if ((this._Geography != value))
				{
					this.OnGeographyChanging(value);
					this.SendPropertyChanging();
					this._Geography = value;
					this.SendPropertyChanged("Geography");
					this.OnGeographyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certificates", DbType="VarChar(MAX)")]
		public string Certificates
		{
			get
			{
				return this._Certificates;
			}
			set
			{
				if ((this._Certificates != value))
				{
					this.OnCertificatesChanging(value);
					this.SendPropertyChanging();
					this._Certificates = value;
					this.SendPropertyChanged("Certificates");
					this.OnCertificatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_License", DbType="VarChar(MAX)")]
		public string License
		{
			get
			{
				return this._License;
			}
			set
			{
				if ((this._License != value))
				{
					this.OnLicenseChanging(value);
					this.SendPropertyChanging();
					this._License = value;
					this.SendPropertyChanged("License");
					this.OnLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dealer", DbType="VarChar(MAX)")]
		public string Dealer
		{
			get
			{
				return this._Dealer;
			}
			set
			{
				if ((this._Dealer != value))
				{
					this.OnDealerChanging(value);
					this.SendPropertyChanging();
					this._Dealer = value;
					this.SendPropertyChanged("Dealer");
					this.OnDealerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateCompany", DbType="VarChar(100)")]
		public string CertificateCompany
		{
			get
			{
				return this._CertificateCompany;
			}
			set
			{
				if ((this._CertificateCompany != value))
				{
					this.OnCertificateCompanyChanging(value);
					this.SendPropertyChanging();
					this._CertificateCompany = value;
					this.SendPropertyChanged("CertificateCompany");
					this.OnCertificateCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateCountry", DbType="VarChar(100)")]
		public string CertificateCountry
		{
			get
			{
				return this._CertificateCountry;
			}
			set
			{
				if ((this._CertificateCountry != value))
				{
					this.OnCertificateCountryChanging(value);
					this.SendPropertyChanging();
					this._CertificateCountry = value;
					this.SendPropertyChanged("CertificateCountry");
					this.OnCertificateCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateAddress", DbType="VarChar(255)")]
		public string CertificateAddress
		{
			get
			{
				return this._CertificateAddress;
			}
			set
			{
				if ((this._CertificateAddress != value))
				{
					this.OnCertificateAddressChanging(value);
					this.SendPropertyChanging();
					this._CertificateAddress = value;
					this.SendPropertyChanged("CertificateAddress");
					this.OnCertificateAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateDirector", DbType="VarChar(100)")]
		public string CertificateDirector
		{
			get
			{
				return this._CertificateDirector;
			}
			set
			{
				if ((this._CertificateDirector != value))
				{
					this.OnCertificateDirectorChanging(value);
					this.SendPropertyChanging();
					this._CertificateDirector = value;
					this.SendPropertyChanged("CertificateDirector");
					this.OnCertificateDirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="VarChar(50)")]
		public string CertificateNumber
		{
			get
			{
				return this._CertificateNumber;
			}
			set
			{
				if ((this._CertificateNumber != value))
				{
					this.OnCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumber = value;
					this.SendPropertyChanged("CertificateNumber");
					this.OnCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateInn", DbType="VarChar(25)")]
		public string CertificateInn
		{
			get
			{
				return this._CertificateInn;
			}
			set
			{
				if ((this._CertificateInn != value))
				{
					this.OnCertificateInnChanging(value);
					this.SendPropertyChanging();
					this._CertificateInn = value;
					this.SendPropertyChanged("CertificateInn");
					this.OnCertificateInnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateDate", DbType="VarChar(255)")]
		public string CertificateDate
		{
			get
			{
				return this._CertificateDate;
			}
			set
			{
				if ((this._CertificateDate != value))
				{
					this.OnCertificateDateChanging(value);
					this.SendPropertyChanging();
					this._CertificateDate = value;
					this.SendPropertyChanged("CertificateDate");
					this.OnCertificateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateOpf", DbType="VarChar(255)")]
		public string CertificateOpf
		{
			get
			{
				return this._CertificateOpf;
			}
			set
			{
				if ((this._CertificateOpf != value))
				{
					this.OnCertificateOpfChanging(value);
					this.SendPropertyChanging();
					this._CertificateOpf = value;
					this.SendPropertyChanged("CertificateOpf");
					this.OnCertificateOpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CartificateU", DbType="VarChar(255)")]
		public string CartificateU
		{
			get
			{
				return this._CartificateU;
			}
			set
			{
				if ((this._CartificateU != value))
				{
					this.OnCartificateUChanging(value);
					this.SendPropertyChanging();
					this._CartificateU = value;
					this.SendPropertyChanged("CartificateU");
					this.OnCartificateUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateCapital", DbType="VarChar(255)")]
		public string CertificateCapital
		{
			get
			{
				return this._CertificateCapital;
			}
			set
			{
				if ((this._CertificateCapital != value))
				{
					this.OnCertificateCapitalChanging(value);
					this.SendPropertyChanging();
					this._CertificateCapital = value;
					this.SendPropertyChanged("CertificateCapital");
					this.OnCertificateCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarif", DbType="VarChar(10)")]
		public string Tarif
		{
			get
			{
				return this._Tarif;
			}
			set
			{
				if ((this._Tarif != value))
				{
					this.OnTarifChanging(value);
					this.SendPropertyChanging();
					this._Tarif = value;
					this.SendPropertyChanged("Tarif");
					this.OnTarifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffExpiration", DbType="Date")]
		public System.Nullable<System.DateTime> TariffExpiration
		{
			get
			{
				return this._TariffExpiration;
			}
			set
			{
				if ((this._TariffExpiration != value))
				{
					this.OnTariffExpirationChanging(value);
					this.SendPropertyChanging();
					this._TariffExpiration = value;
					this.SendPropertyChanged("TariffExpiration");
					this.OnTariffExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffMoney", DbType="VarBinary(255)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TariffMoney
		{
			get
			{
				return this._TariffMoney;
			}
			set
			{
				if ((this._TariffMoney != value))
				{
					this.OnTariffMoneyChanging(value);
					this.SendPropertyChanging();
					this._TariffMoney = value;
					this.SendPropertyChanged("TariffMoney");
					this.OnTariffMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffTmp", DbType="VarChar(25)")]
		public string TariffTmp
		{
			get
			{
				return this._TariffTmp;
			}
			set
			{
				if ((this._TariffTmp != value))
				{
					this.OnTariffTmpChanging(value);
					this.SendPropertyChanging();
					this._TariffTmp = value;
					this.SendPropertyChanged("TariffTmp");
					this.OnTariffTmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activate", DbType="VarChar(32)")]
		public string Activate
		{
			get
			{
				return this._Activate;
			}
			set
			{
				if ((this._Activate != value))
				{
					this.OnActivateChanging(value);
					this.SendPropertyChanging();
					this._Activate = value;
					this.SendPropertyChanged("Activate");
					this.OnActivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigSave2Week", DbType="Int NOT NULL")]
		public int ConfigSave2Week
		{
			get
			{
				return this._ConfigSave2Week;
			}
			set
			{
				if ((this._ConfigSave2Week != value))
				{
					this.OnConfigSave2WeekChanging(value);
					this.SendPropertyChanging();
					this._ConfigSave2Week = value;
					this.SendPropertyChanged("ConfigSave2Week");
					this.OnConfigSave2WeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedIP", DbType="VarChar(15)")]
		public string LoggedIP
		{
			get
			{
				return this._LoggedIP;
			}
			set
			{
				if ((this._LoggedIP != value))
				{
					this.OnLoggedIPChanging(value);
					this.SendPropertyChanging();
					this._LoggedIP = value;
					this.SendPropertyChanged("LoggedIP");
					this.OnLoggedIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LoggedDate
		{
			get
			{
				return this._LoggedDate;
			}
			set
			{
				if ((this._LoggedDate != value))
				{
					this.OnLoggedDateChanging(value);
					this.SendPropertyChanging();
					this._LoggedDate = value;
					this.SendPropertyChanged("LoggedDate");
					this.OnLoggedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrator", DbType="Int NOT NULL")]
		public int Administrator
		{
			get
			{
				return this._Administrator;
			}
			set
			{
				if ((this._Administrator != value))
				{
					this.OnAdministratorChanging(value);
					this.SendPropertyChanging();
					this._Administrator = value;
					this.SendPropertyChanged("Administrator");
					this.OnAdministratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime2 NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Design", DbType="VarChar(10)")]
		public string Design
		{
			get
			{
				return this._Design;
			}
			set
			{
				if ((this._Design != value))
				{
					this.OnDesignChanging(value);
					this.SendPropertyChanging();
					this._Design = value;
					this.SendPropertyChanged("Design");
					this.OnDesignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListCertificate", DbType="VarChar(MAX)")]
		public string ListCertificate
		{
			get
			{
				return this._ListCertificate;
			}
			set
			{
				if ((this._ListCertificate != value))
				{
					this.OnListCertificateChanging(value);
					this.SendPropertyChanging();
					this._ListCertificate = value;
					this.SendPropertyChanged("ListCertificate");
					this.OnListCertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerPeriod", DbType="Int NOT NULL")]
		public int BannerPeriod
		{
			get
			{
				return this._BannerPeriod;
			}
			set
			{
				if ((this._BannerPeriod != value))
				{
					this.OnBannerPeriodChanging(value);
					this.SendPropertyChanging();
					this._BannerPeriod = value;
					this.SendPropertyChanged("BannerPeriod");
					this.OnBannerPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="VarChar(255)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniSenderActivated", DbType="bit NOT NULL")]
		public bool UniSenderActivated
		{
			get
			{
				return this._UniSenderActivated;
			}
			set
			{
				if ((this._UniSenderActivated != value))
				{
					this.OnUniSenderActivatedChanging(value);
					this.SendPropertyChanging();
					this._UniSenderActivated = value;
					this.SendPropertyChanged("UniSenderActivated");
					this.OnUniSenderActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableHotProductsShows", DbType="int NOT NULL")]
		public int AvailableHotProductsShows
		{
			get
			{
				return this._AvailableHotProductsShows;
			}
			set
			{
				if ((this._AvailableHotProductsShows != value))
				{
					this.OnAvailableHotProductsShowsChanging(value);
					this.SendPropertyChanging();
					this._AvailableHotProductsShows = value;
					this.SendPropertyChanged("AvailableHotProductsShows");
					this.OnAvailableHotProductsShowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPhone", Storage="_UserPhones", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserPhone> UserPhones
		{
			get
			{
				return this._UserPhones;
			}
			set
			{
				this._UserPhones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserOccupationInfo", Storage="_UserOccupationInfos", ThisKey="Id", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public UserOccupationInfo UserOccupationInfos
		{
			get
			{
				return this._UserOccupationInfos.Entity;
			}
			set
			{
				UserOccupationInfo previousValue = this._UserOccupationInfos.Entity;
				if (((previousValue != value) 
							|| (this._UserOccupationInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserOccupationInfos.Entity = null;
						previousValue.User = null;
					}
					this._UserOccupationInfos.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("UserOccupationInfos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLegalInfo", Storage="_UserLegalInfos", ThisKey="Id", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public UserLegalInfo UserLegalInfos
		{
			get
			{
				return this._UserLegalInfos.Entity;
			}
			set
			{
				UserLegalInfo previousValue = this._UserLegalInfos.Entity;
				if (((previousValue != value) 
							|| (this._UserLegalInfos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserLegalInfos.Entity = null;
						previousValue.User = null;
					}
					this._UserLegalInfos.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("UserLegalInfos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCategory", Storage="_UserCategories", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserCategory> UserCategories
		{
			get
			{
				return this._UserCategories;
			}
			set
			{
				this._UserCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Product", Storage="_Products", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tender", Storage="_Tenders", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Tender> Tenders
		{
			get
			{
				return this._Tenders;
			}
			set
			{
				this._Tenders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TenderOffer", Storage="_TenderOffers", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TenderOffer> TenderOffers
		{
			get
			{
				return this._TenderOffers;
			}
			set
			{
				this._TenderOffers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bill", Storage="_Bills", ThisKey="Id", OtherKey="AuthorId")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserBanner", Storage="_Banner", ThisKey="Id", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public UserBanner Banner
		{
			get
			{
				return this._Banner.Entity;
			}
			set
			{
				UserBanner previousValue = this._Banner.Entity;
				if (((previousValue != value) 
							|| (this._Banner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Banner.Entity = null;
						previousValue.User = null;
					}
					this._Banner.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Banner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserPhones(UserPhone entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserPhones(UserPhone entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserCategories(UserCategory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserCategories(UserCategory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tenders(Tender entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tenders(Tender entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TenderOffers(TenderOffer entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TenderOffers(TenderOffer entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLegalInfo")]
	public partial class UserLegalInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _OGRN;
		
		private string _INN;
		
		private string _KPP;
		
		private string _AccountRNumber;
		
		private string _AccountKNumber;
		
		private string _AccountBank;
		
		private string _AccountBankBIK;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnOGRNChanging(string value);
    partial void OnOGRNChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnKPPChanging(string value);
    partial void OnKPPChanged();
    partial void OnAccountRNumberChanging(string value);
    partial void OnAccountRNumberChanged();
    partial void OnAccountKNumberChanging(string value);
    partial void OnAccountKNumberChanged();
    partial void OnAccountBankChanging(string value);
    partial void OnAccountBankChanged();
    partial void OnAccountBankBIKChanging(string value);
    partial void OnAccountBankBIKChanged();
    #endregion
		
		public UserLegalInfo()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGRN", DbType="NVarChar(50)")]
		public string OGRN
		{
			get
			{
				return this._OGRN;
			}
			set
			{
				if ((this._OGRN != value))
				{
					this.OnOGRNChanging(value);
					this.SendPropertyChanging();
					this._OGRN = value;
					this.SendPropertyChanged("OGRN");
					this.OnOGRNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="VarChar(50)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="VarChar(50)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this.OnKPPChanging(value);
					this.SendPropertyChanging();
					this._KPP = value;
					this.SendPropertyChanged("KPP");
					this.OnKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountRNumber", DbType="VarChar(50)")]
		public string AccountRNumber
		{
			get
			{
				return this._AccountRNumber;
			}
			set
			{
				if ((this._AccountRNumber != value))
				{
					this.OnAccountRNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountRNumber = value;
					this.SendPropertyChanged("AccountRNumber");
					this.OnAccountRNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountKNumber", DbType="VarChar(50)")]
		public string AccountKNumber
		{
			get
			{
				return this._AccountKNumber;
			}
			set
			{
				if ((this._AccountKNumber != value))
				{
					this.OnAccountKNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountKNumber = value;
					this.SendPropertyChanged("AccountKNumber");
					this.OnAccountKNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBank", DbType="NVarChar(255)")]
		public string AccountBank
		{
			get
			{
				return this._AccountBank;
			}
			set
			{
				if ((this._AccountBank != value))
				{
					this.OnAccountBankChanging(value);
					this.SendPropertyChanging();
					this._AccountBank = value;
					this.SendPropertyChanged("AccountBank");
					this.OnAccountBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBankBIK", DbType="NVarChar(50)")]
		public string AccountBankBIK
		{
			get
			{
				return this._AccountBankBIK;
			}
			set
			{
				if ((this._AccountBankBIK != value))
				{
					this.OnAccountBankBIKChanging(value);
					this.SendPropertyChanging();
					this._AccountBankBIK = value;
					this.SendPropertyChanged("AccountBankBIK");
					this.OnAccountBankBIKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLegalInfo", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserLegalInfos = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserLegalInfos = this;
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ParentId;
		
		private string _Title;
		
		private int _ProductsCount;
		
		private int _TendersCount;
		
		private int _Sort;
		
		private int _ViewMode;
		
		private EntitySet<Category> _ChildCategories;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Tender> _Tenders;
		
		private EntitySet<CategoryMapItem> _CategoryMapItems;
		
		private EntitySet<CategoryMap> _CategoryMaps;
		
		private EntityRef<Category> _ParentCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnProductsCountChanging(int value);
    partial void OnProductsCountChanged();
    partial void OnTendersCountChanging(int value);
    partial void OnTendersCountChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    partial void OnViewModeChanging(int value);
    partial void OnViewModeChanged();
    #endregion
		
		public Category()
		{
			this._ChildCategories = new EntitySet<Category>(new Action<Category>(this.attach_ChildCategories), new Action<Category>(this.detach_ChildCategories));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Tenders = new EntitySet<Tender>(new Action<Tender>(this.attach_Tenders), new Action<Tender>(this.detach_Tenders));
			this._CategoryMapItems = new EntitySet<CategoryMapItem>(new Action<CategoryMapItem>(this.attach_CategoryMapItems), new Action<CategoryMapItem>(this.detach_CategoryMapItems));
			this._CategoryMaps = new EntitySet<CategoryMap>(new Action<CategoryMap>(this.attach_CategoryMaps), new Action<CategoryMap>(this.detach_CategoryMaps));
			this._ParentCategory = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int NOT NULL")]
		public int ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._ParentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductsCount", DbType="Int NOT NULL")]
		public int ProductsCount
		{
			get
			{
				return this._ProductsCount;
			}
			set
			{
				if ((this._ProductsCount != value))
				{
					this.OnProductsCountChanging(value);
					this.SendPropertyChanging();
					this._ProductsCount = value;
					this.SendPropertyChanged("ProductsCount");
					this.OnProductsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TendersCount", DbType="Int NOT NULL")]
		public int TendersCount
		{
			get
			{
				return this._TendersCount;
			}
			set
			{
				if ((this._TendersCount != value))
				{
					this.OnTendersCountChanging(value);
					this.SendPropertyChanging();
					this._TendersCount = value;
					this.SendPropertyChanged("TendersCount");
					this.OnTendersCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int NOT NULL")]
		public int Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewMode", DbType="Int NOT NULL")]
		public int ViewMode
		{
			get
			{
				return this._ViewMode;
			}
			set
			{
				if ((this._ViewMode != value))
				{
					this.OnViewModeChanging(value);
					this.SendPropertyChanging();
					this._ViewMode = value;
					this.SendPropertyChanged("ViewMode");
					this.OnViewModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_ChildCategories", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<Category> ChildCategories
		{
			get
			{
				return this._ChildCategories;
			}
			set
			{
				this._ChildCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Tender", Storage="_Tenders", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<Tender> Tenders
		{
			get
			{
				return this._Tenders;
			}
			set
			{
				this._Tenders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CategoryMapItem", Storage="_CategoryMapItems", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<CategoryMapItem> CategoryMapItems
		{
			get
			{
				return this._CategoryMapItems;
			}
			set
			{
				this._CategoryMapItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CategoryMap", Storage="_CategoryMaps", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<CategoryMap> CategoryMaps
		{
			get
			{
				return this._CategoryMaps;
			}
			set
			{
				this._CategoryMaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_ParentCategory", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public Category ParentCategory
		{
			get
			{
				return this._ParentCategory.Entity;
			}
			set
			{
				Category previousValue = this._ParentCategory.Entity;
				if (((previousValue != value) 
							|| (this._ParentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentCategory.Entity = null;
						previousValue.ChildCategories.Remove(this);
					}
					this._ParentCategory.Entity = value;
					if ((value != null))
					{
						value.ChildCategories.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(int);
					}
					this.SendPropertyChanged("ParentCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChildCategories(Category entity)
		{
			this.SendPropertyChanging();
			entity.ParentCategory = this;
		}
		
		private void detach_ChildCategories(Category entity)
		{
			this.SendPropertyChanging();
			entity.ParentCategory = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_Tenders(Tender entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Tenders(Tender entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_CategoryMapItems(CategoryMapItem entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_CategoryMapItems(CategoryMapItem entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_CategoryMaps(CategoryMap entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_CategoryMaps(CategoryMap entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCategories")]
	public partial class UserCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _Title;
		
		private string _Description;
		
		private int _Position;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    #endregion
		
		public UserCategory()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserCategory_Product", Storage="_Products", ThisKey="Id", OtherKey="UserCategoryId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCategory", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserCategories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserCategories.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.UserCategory = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.UserCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductImages")]
	public partial class ProductImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductId;
		
		private string _Image;
		
		private string _Title;
		
		private int _Position;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    #endregion
		
		public ProductImage()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductImage", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductImages.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductImages.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _CategoryId;
		
		private string _Title;
		
		private string _Keywords;
		
		private string _Description;
		
		private string _Img;
		
		private System.DateTime _Date;
		
		private string _Field1;
		
		private string _Field3;
		
		private string _Field4;
		
		private string _Field5;
		
		private string _Field6;
		
		private string _Field8;
		
		private string _Field9;
		
		private int _UserCategoryId;
		
		private string _Price;
		
		private string _Currency;
		
		private string _Measure;
		
		private string _MinimunLotSize;
		
		private string _MinimumLotMeasure;
		
		private string _VendorCountry;
		
		private string _DeliveryTime;
		
		private string _DeliveryPossibilityDay;
		
		private string _DeliveryPossibilityMeasure;
		
		private string _DeliveryPossibilityTime;
		
		private string _ProductCode;
		
		private string _ProductBox;
		
		private EntitySet<ProductImage> _ProductImages;
		
		private EntityRef<HotProduct> _HotProducts;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<UserCategory> _UserCategory;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnField1Changing(string value);
    partial void OnField1Changed();
    partial void OnField3Changing(string value);
    partial void OnField3Changed();
    partial void OnField4Changing(string value);
    partial void OnField4Changed();
    partial void OnField5Changing(string value);
    partial void OnField5Changed();
    partial void OnField6Changing(string value);
    partial void OnField6Changed();
    partial void OnField8Changing(string value);
    partial void OnField8Changed();
    partial void OnField9Changing(string value);
    partial void OnField9Changed();
    partial void OnUserCategoryIdChanging(int value);
    partial void OnUserCategoryIdChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnMeasureChanging(string value);
    partial void OnMeasureChanged();
    partial void OnMinimunLotSizeChanging(string value);
    partial void OnMinimunLotSizeChanged();
    partial void OnMinimumLotMeasureChanging(string value);
    partial void OnMinimumLotMeasureChanged();
    partial void OnVendorCountryChanging(string value);
    partial void OnVendorCountryChanged();
    partial void OnDeliveryTimeChanging(string value);
    partial void OnDeliveryTimeChanged();
    partial void OnDeliveryPossibilityDayChanging(string value);
    partial void OnDeliveryPossibilityDayChanged();
    partial void OnDeliveryPossibilityMeasureChanging(string value);
    partial void OnDeliveryPossibilityMeasureChanged();
    partial void OnDeliveryPossibilityTimeChanging(string value);
    partial void OnDeliveryPossibilityTimeChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnProductBoxChanging(string value);
    partial void OnProductBoxChanged();
    #endregion
		
		public Product()
		{
			this._ProductImages = new EntitySet<ProductImage>(new Action<ProductImage>(this.attach_ProductImages), new Action<ProductImage>(this.detach_ProductImages));
			this._HotProducts = default(EntityRef<HotProduct>);
			this._Category = default(EntityRef<Category>);
			this._UserCategory = default(EntityRef<UserCategory>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="VarChar(50)")]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime2 NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field1", DbType="VarChar(255)")]
		public string Field1
		{
			get
			{
				return this._Field1;
			}
			set
			{
				if ((this._Field1 != value))
				{
					this.OnField1Changing(value);
					this.SendPropertyChanging();
					this._Field1 = value;
					this.SendPropertyChanged("Field1");
					this.OnField1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field3", DbType="VarChar(255)")]
		public string Field3
		{
			get
			{
				return this._Field3;
			}
			set
			{
				if ((this._Field3 != value))
				{
					this.OnField3Changing(value);
					this.SendPropertyChanging();
					this._Field3 = value;
					this.SendPropertyChanged("Field3");
					this.OnField3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field4", DbType="VarChar(255)")]
		public string Field4
		{
			get
			{
				return this._Field4;
			}
			set
			{
				if ((this._Field4 != value))
				{
					this.OnField4Changing(value);
					this.SendPropertyChanging();
					this._Field4 = value;
					this.SendPropertyChanged("Field4");
					this.OnField4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field5", DbType="VarChar(255)")]
		public string Field5
		{
			get
			{
				return this._Field5;
			}
			set
			{
				if ((this._Field5 != value))
				{
					this.OnField5Changing(value);
					this.SendPropertyChanging();
					this._Field5 = value;
					this.SendPropertyChanged("Field5");
					this.OnField5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field6", DbType="VarChar(255)")]
		public string Field6
		{
			get
			{
				return this._Field6;
			}
			set
			{
				if ((this._Field6 != value))
				{
					this.OnField6Changing(value);
					this.SendPropertyChanging();
					this._Field6 = value;
					this.SendPropertyChanged("Field6");
					this.OnField6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field8", DbType="VarChar(255)")]
		public string Field8
		{
			get
			{
				return this._Field8;
			}
			set
			{
				if ((this._Field8 != value))
				{
					this.OnField8Changing(value);
					this.SendPropertyChanging();
					this._Field8 = value;
					this.SendPropertyChanged("Field8");
					this.OnField8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field9", DbType="VarChar(255)")]
		public string Field9
		{
			get
			{
				return this._Field9;
			}
			set
			{
				if ((this._Field9 != value))
				{
					this.OnField9Changing(value);
					this.SendPropertyChanging();
					this._Field9 = value;
					this.SendPropertyChanged("Field9");
					this.OnField9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCategoryId", DbType="Int NOT NULL")]
		public int UserCategoryId
		{
			get
			{
				return this._UserCategoryId;
			}
			set
			{
				if ((this._UserCategoryId != value))
				{
					if (this._UserCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._UserCategoryId = value;
					this.SendPropertyChanged("UserCategoryId");
					this.OnUserCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="VarChar(255)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(255)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="VarChar(255)")]
		public string Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimunLotSize", DbType="VarChar(255)")]
		public string MinimunLotSize
		{
			get
			{
				return this._MinimunLotSize;
			}
			set
			{
				if ((this._MinimunLotSize != value))
				{
					this.OnMinimunLotSizeChanging(value);
					this.SendPropertyChanging();
					this._MinimunLotSize = value;
					this.SendPropertyChanged("MinimunLotSize");
					this.OnMinimunLotSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumLotMeasure", DbType="VarChar(255)")]
		public string MinimumLotMeasure
		{
			get
			{
				return this._MinimumLotMeasure;
			}
			set
			{
				if ((this._MinimumLotMeasure != value))
				{
					this.OnMinimumLotMeasureChanging(value);
					this.SendPropertyChanging();
					this._MinimumLotMeasure = value;
					this.SendPropertyChanged("MinimumLotMeasure");
					this.OnMinimumLotMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorCountry", DbType="VarChar(255)")]
		public string VendorCountry
		{
			get
			{
				return this._VendorCountry;
			}
			set
			{
				if ((this._VendorCountry != value))
				{
					this.OnVendorCountryChanging(value);
					this.SendPropertyChanging();
					this._VendorCountry = value;
					this.SendPropertyChanged("VendorCountry");
					this.OnVendorCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTime", DbType="VarChar(255)")]
		public string DeliveryTime
		{
			get
			{
				return this._DeliveryTime;
			}
			set
			{
				if ((this._DeliveryTime != value))
				{
					this.OnDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTime = value;
					this.SendPropertyChanged("DeliveryTime");
					this.OnDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryPossibilityDay", DbType="VarChar(255)")]
		public string DeliveryPossibilityDay
		{
			get
			{
				return this._DeliveryPossibilityDay;
			}
			set
			{
				if ((this._DeliveryPossibilityDay != value))
				{
					this.OnDeliveryPossibilityDayChanging(value);
					this.SendPropertyChanging();
					this._DeliveryPossibilityDay = value;
					this.SendPropertyChanged("DeliveryPossibilityDay");
					this.OnDeliveryPossibilityDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryPossibilityMeasure", DbType="VarChar(255)")]
		public string DeliveryPossibilityMeasure
		{
			get
			{
				return this._DeliveryPossibilityMeasure;
			}
			set
			{
				if ((this._DeliveryPossibilityMeasure != value))
				{
					this.OnDeliveryPossibilityMeasureChanging(value);
					this.SendPropertyChanging();
					this._DeliveryPossibilityMeasure = value;
					this.SendPropertyChanged("DeliveryPossibilityMeasure");
					this.OnDeliveryPossibilityMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryPossibilityTime", DbType="VarChar(255)")]
		public string DeliveryPossibilityTime
		{
			get
			{
				return this._DeliveryPossibilityTime;
			}
			set
			{
				if ((this._DeliveryPossibilityTime != value))
				{
					this.OnDeliveryPossibilityTimeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryPossibilityTime = value;
					this.SendPropertyChanged("DeliveryPossibilityTime");
					this.OnDeliveryPossibilityTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="VarChar(255)")]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductBox", DbType="VarChar(255)")]
		public string ProductBox
		{
			get
			{
				return this._ProductBox;
			}
			set
			{
				if ((this._ProductBox != value))
				{
					this.OnProductBoxChanging(value);
					this.SendPropertyChanging();
					this._ProductBox = value;
					this.SendPropertyChanged("ProductBox");
					this.OnProductBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductImage", Storage="_ProductImages", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<ProductImage> ProductImages
		{
			get
			{
				return this._ProductImages;
			}
			set
			{
				this._ProductImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_HotProduct", Storage="_HotProducts", ThisKey="Id", OtherKey="ProductId", IsUnique=true, IsForeignKey=false)]
		public HotProduct HotProducts
		{
			get
			{
				return this._HotProducts.Entity;
			}
			set
			{
				HotProduct previousValue = this._HotProducts.Entity;
				if (((previousValue != value) 
							|| (this._HotProducts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HotProducts.Entity = null;
						previousValue.Product = null;
					}
					this._HotProducts.Entity = value;
					if ((value != null))
					{
						value.Product = this;
					}
					this.SendPropertyChanged("HotProducts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserCategory_Product", Storage="_UserCategory", ThisKey="UserCategoryId", OtherKey="Id", IsForeignKey=true, DeleteRule="SET DEFAULT")]
		public UserCategory UserCategory
		{
			get
			{
				return this._UserCategory.Entity;
			}
			set
			{
				UserCategory previousValue = this._UserCategory.Entity;
				if (((previousValue != value) 
							|| (this._UserCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserCategory.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._UserCategory.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._UserCategoryId = value.Id;
					}
					else
					{
						this._UserCategoryId = default(int);
					}
					this.SendPropertyChanged("UserCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Product", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductImages(ProductImage entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductImages(ProductImage entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotProducts")]
	public partial class HotProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductId;
		
		private bool _EnableHotProduct;
		
		private int _PayedViews;
		
		private int _Clicks;
		
		private int _Views;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnEnableHotProductChanging(bool value);
    partial void OnEnableHotProductChanged();
    partial void OnPayedViewsChanging(int value);
    partial void OnPayedViewsChanged();
    partial void OnClicksChanging(int value);
    partial void OnClicksChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    #endregion
		
		public HotProduct()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableHotProduct", DbType="Bit NOT NULL")]
		public bool EnableHotProduct
		{
			get
			{
				return this._EnableHotProduct;
			}
			set
			{
				if ((this._EnableHotProduct != value))
				{
					this.OnEnableHotProductChanging(value);
					this.SendPropertyChanging();
					this._EnableHotProduct = value;
					this.SendPropertyChanged("EnableHotProduct");
					this.OnEnableHotProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedViews", DbType="Int NOT NULL")]
		public int PayedViews
		{
			get
			{
				return this._PayedViews;
			}
			set
			{
				if ((this._PayedViews != value))
				{
					this.OnPayedViewsChanging(value);
					this.SendPropertyChanging();
					this._PayedViews = value;
					this.SendPropertyChanged("PayedViews");
					this.OnPayedViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clicks", DbType="Int NOT NULL")]
		public int Clicks
		{
			get
			{
				return this._Clicks;
			}
			set
			{
				if ((this._Clicks != value))
				{
					this.OnClicksChanging(value);
					this.SendPropertyChanging();
					this._Clicks = value;
					this.SendPropertyChanged("Clicks");
					this.OnClicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_HotProduct", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.HotProducts = null;
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.HotProducts = this;
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tenders")]
	public partial class Tender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _CategoryId;
		
		private string _Title;
		
		private string _Description;
		
		private decimal _MinPrice;
		
		private decimal _MaxPrice;
		
		private string _Currency;
		
		private string _Size;
		
		private string _Measure;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _Period;
		
		private string _Image;
		
		private string _Keywords;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntitySet<TenderOffer> _TenderOffers;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMinPriceChanging(decimal value);
    partial void OnMinPriceChanged();
    partial void OnMaxPriceChanging(decimal value);
    partial void OnMaxPriceChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnMeasureChanging(string value);
    partial void OnMeasureChanged();
    partial void OnDateStartChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public Tender()
		{
			this._TenderOffers = new EntitySet<TenderOffer>(new Action<TenderOffer>(this.attach_TenderOffers), new Action<TenderOffer>(this.detach_TenderOffers));
			this._Category = default(EntityRef<Category>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal MinPrice
		{
			get
			{
				return this._MinPrice;
			}
			set
			{
				if ((this._MinPrice != value))
				{
					this.OnMinPriceChanging(value);
					this.SendPropertyChanging();
					this._MinPrice = value;
					this.SendPropertyChanged("MinPrice");
					this.OnMinPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal MaxPrice
		{
			get
			{
				return this._MaxPrice;
			}
			set
			{
				if ((this._MaxPrice != value))
				{
					this.OnMaxPriceChanging(value);
					this.SendPropertyChanging();
					this._MaxPrice = value;
					this.SendPropertyChanged("MaxPrice");
					this.OnMaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(250)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="VarChar(25)")]
		public string Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="VarChar(25)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(50)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="VarChar(MAX)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tender_TenderOffer", Storage="_TenderOffers", ThisKey="Id", OtherKey="TenderId")]
		public EntitySet<TenderOffer> TenderOffers
		{
			get
			{
				return this._TenderOffers;
			}
			set
			{
				this._TenderOffers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Tender", Storage="_Category", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Tenders.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Tenders.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tender", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tenders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tenders.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TenderOffers(TenderOffer entity)
		{
			this.SendPropertyChanging();
			entity.Tender = this;
		}
		
		private void detach_TenderOffers(TenderOffer entity)
		{
			this.SendPropertyChanging();
			entity.Tender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TenderOffers")]
	public partial class TenderOffer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TenderId;
		
		private int _UserId;
		
		private string _Price;
		
		private int _DeliveryInfo;
		
		private string _DeliveryOtherInfo;
		
		private int _PaymentInfo;
		
		private string _PaymentOtherInfo;
		
		private string _OfferText;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<Tender> _Tender;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenderIdChanging(int value);
    partial void OnTenderIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnDeliveryInfoChanging(int value);
    partial void OnDeliveryInfoChanged();
    partial void OnDeliveryOtherInfoChanging(string value);
    partial void OnDeliveryOtherInfoChanged();
    partial void OnPaymentInfoChanging(int value);
    partial void OnPaymentInfoChanged();
    partial void OnPaymentOtherInfoChanging(string value);
    partial void OnPaymentOtherInfoChanged();
    partial void OnOfferTextChanging(string value);
    partial void OnOfferTextChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public TenderOffer()
		{
			this._Tender = default(EntityRef<Tender>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenderId", DbType="Int NOT NULL")]
		public int TenderId
		{
			get
			{
				return this._TenderId;
			}
			set
			{
				if ((this._TenderId != value))
				{
					if (this._Tender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenderIdChanging(value);
					this.SendPropertyChanging();
					this._TenderId = value;
					this.SendPropertyChanged("TenderId");
					this.OnTenderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="VarChar(50)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryInfo", DbType="Int NOT NULL")]
		public int DeliveryInfo
		{
			get
			{
				return this._DeliveryInfo;
			}
			set
			{
				if ((this._DeliveryInfo != value))
				{
					this.OnDeliveryInfoChanging(value);
					this.SendPropertyChanging();
					this._DeliveryInfo = value;
					this.SendPropertyChanged("DeliveryInfo");
					this.OnDeliveryInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryOtherInfo", DbType="VarChar(255)")]
		public string DeliveryOtherInfo
		{
			get
			{
				return this._DeliveryOtherInfo;
			}
			set
			{
				if ((this._DeliveryOtherInfo != value))
				{
					this.OnDeliveryOtherInfoChanging(value);
					this.SendPropertyChanging();
					this._DeliveryOtherInfo = value;
					this.SendPropertyChanged("DeliveryOtherInfo");
					this.OnDeliveryOtherInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentInfo", DbType="Int NOT NULL")]
		public int PaymentInfo
		{
			get
			{
				return this._PaymentInfo;
			}
			set
			{
				if ((this._PaymentInfo != value))
				{
					this.OnPaymentInfoChanging(value);
					this.SendPropertyChanging();
					this._PaymentInfo = value;
					this.SendPropertyChanged("PaymentInfo");
					this.OnPaymentInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentOtherInfo", DbType="VarChar(255)")]
		public string PaymentOtherInfo
		{
			get
			{
				return this._PaymentOtherInfo;
			}
			set
			{
				if ((this._PaymentOtherInfo != value))
				{
					this.OnPaymentOtherInfoChanging(value);
					this.SendPropertyChanging();
					this._PaymentOtherInfo = value;
					this.SendPropertyChanged("PaymentOtherInfo");
					this.OnPaymentOtherInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferText", DbType="VarChar(100)")]
		public string OfferText
		{
			get
			{
				return this._OfferText;
			}
			set
			{
				if ((this._OfferText != value))
				{
					this.OnOfferTextChanging(value);
					this.SendPropertyChanging();
					this._OfferText = value;
					this.SendPropertyChanged("OfferText");
					this.OnOfferTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tender_TenderOffer", Storage="_Tender", ThisKey="TenderId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tender Tender
		{
			get
			{
				return this._Tender.Entity;
			}
			set
			{
				Tender previousValue = this._Tender.Entity;
				if (((previousValue != value) 
							|| (this._Tender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tender.Entity = null;
						previousValue.TenderOffers.Remove(this);
					}
					this._Tender.Entity = value;
					if ((value != null))
					{
						value.TenderOffers.Add(this);
						this._TenderId = value.Id;
					}
					else
					{
						this._TenderId = default(int);
					}
					this.SendPropertyChanged("Tender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TenderOffer", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TenderOffers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TenderOffers.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaticPages")]
	public partial class StaticPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Title;
		
		private string _Content;
		
		private string _Route;
		
		private int _Views;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnRouteChanging(string value);
    partial void OnRouteChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public StaticPage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="NVarChar(255)")]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this.OnRouteChanging(value);
					this.SendPropertyChanging();
					this._Route = value;
					this.SendPropertyChanged("Route");
					this.OnRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banners")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Img;
		
		private string _Html;
		
		private string _Href;
		
		private int _Sort;
		
		private string _Objects;
		
		private string _Categories;
		
		private string _Extra;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnHtmlChanging(string value);
    partial void OnHtmlChanged();
    partial void OnHrefChanging(string value);
    partial void OnHrefChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    partial void OnObjectsChanging(string value);
    partial void OnObjectsChanged();
    partial void OnCategoriesChanging(string value);
    partial void OnCategoriesChanged();
    partial void OnExtraChanging(string value);
    partial void OnExtraChanged();
    #endregion
		
		public Banner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Html", DbType="VarChar(MAX)")]
		public string Html
		{
			get
			{
				return this._Html;
			}
			set
			{
				if ((this._Html != value))
				{
					this.OnHtmlChanging(value);
					this.SendPropertyChanging();
					this._Html = value;
					this.SendPropertyChanged("Html");
					this.OnHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Href", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Href
		{
			get
			{
				return this._Href;
			}
			set
			{
				if ((this._Href != value))
				{
					this.OnHrefChanging(value);
					this.SendPropertyChanging();
					this._Href = value;
					this.SendPropertyChanged("Href");
					this.OnHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int NOT NULL")]
		public int Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objects", DbType="VarChar(MAX)")]
		public string Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				if ((this._Objects != value))
				{
					this.OnObjectsChanging(value);
					this.SendPropertyChanging();
					this._Objects = value;
					this.SendPropertyChanged("Objects");
					this.OnObjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categories", DbType="VarChar(MAX)")]
		public string Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				if ((this._Categories != value))
				{
					this.OnCategoriesChanging(value);
					this.SendPropertyChanging();
					this._Categories = value;
					this.SendPropertyChanged("Categories");
					this.OnCategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extra", DbType="VarChar(MAX)")]
		public string Extra
		{
			get
			{
				return this._Extra;
			}
			set
			{
				if ((this._Extra != value))
				{
					this.OnExtraChanging(value);
					this.SendPropertyChanging();
					this._Extra = value;
					this.SendPropertyChanged("Extra");
					this.OnExtraChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailNotificationMessages")]
	public partial class MailNotificationMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Recipient;
		
		private string _Subject;
		
		private string _Content;
		
		private bool _Sended;
		
		private System.Nullable<System.DateTime> _DateEnqued;
		
		private System.Nullable<System.DateTime> _DateSended;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRecipientChanging(string value);
    partial void OnRecipientChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnSendedChanging(bool value);
    partial void OnSendedChanged();
    partial void OnDateEnquedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEnquedChanged();
    partial void OnDateSendedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSendedChanged();
    #endregion
		
		public MailNotificationMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipient", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Recipient
		{
			get
			{
				return this._Recipient;
			}
			set
			{
				if ((this._Recipient != value))
				{
					this.OnRecipientChanging(value);
					this.SendPropertyChanging();
					this._Recipient = value;
					this.SendPropertyChanged("Recipient");
					this.OnRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(255)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sended", DbType="Bit NOT NULL")]
		public bool Sended
		{
			get
			{
				return this._Sended;
			}
			set
			{
				if ((this._Sended != value))
				{
					this.OnSendedChanging(value);
					this.SendPropertyChanging();
					this._Sended = value;
					this.SendPropertyChanged("Sended");
					this.OnSendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnqued", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnqued
		{
			get
			{
				return this._DateEnqued;
			}
			set
			{
				if ((this._DateEnqued != value))
				{
					this.OnDateEnquedChanging(value);
					this.SendPropertyChanging();
					this._DateEnqued = value;
					this.SendPropertyChanged("DateEnqued");
					this.OnDateEnquedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSended
		{
			get
			{
				return this._DateSended;
			}
			set
			{
				if ((this._DateSended != value))
				{
					this.OnDateSendedChanging(value);
					this.SendPropertyChanging();
					this._DateSended = value;
					this.SendPropertyChanged("DateSended");
					this.OnDateSendedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryMapItems")]
	public partial class CategoryMapItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CategoryMapId;
		
		private int _CategoryId;
		
		private int _SortOrder;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<CategoryMap> _CategoryMap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCategoryMapIdChanging(int value);
    partial void OnCategoryMapIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public CategoryMapItem()
		{
			this._Category = default(EntityRef<Category>);
			this._CategoryMap = default(EntityRef<CategoryMap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryMapId", DbType="Int NOT NULL")]
		public int CategoryMapId
		{
			get
			{
				return this._CategoryMapId;
			}
			set
			{
				if ((this._CategoryMapId != value))
				{
					if (this._CategoryMap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryMapIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryMapId = value;
					this.SendPropertyChanged("CategoryMapId");
					this.OnCategoryMapIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CategoryMapItem", Storage="_Category", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.CategoryMapItems.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.CategoryMapItems.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryMap_CategoryMapItem", Storage="_CategoryMap", ThisKey="CategoryMapId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CategoryMap CategoryMap
		{
			get
			{
				return this._CategoryMap.Entity;
			}
			set
			{
				CategoryMap previousValue = this._CategoryMap.Entity;
				if (((previousValue != value) 
							|| (this._CategoryMap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategoryMap.Entity = null;
						previousValue.CategoryMapItems.Remove(this);
					}
					this._CategoryMap.Entity = value;
					if ((value != null))
					{
						value.CategoryMapItems.Add(this);
						this._CategoryMapId = value.Id;
					}
					else
					{
						this._CategoryMapId = default(int);
					}
					this.SendPropertyChanged("CategoryMap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryMaps")]
	public partial class CategoryMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CategoryId;
		
		private string _DisplayName;
		
		private int _SortOrder;
		
		private string _Image;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntitySet<CategoryMapItem> _CategoryMapItems;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public CategoryMap()
		{
			this._CategoryMapItems = new EntitySet<CategoryMapItem>(new Action<CategoryMapItem>(this.attach_CategoryMapItems), new Action<CategoryMapItem>(this.detach_CategoryMapItems));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(255)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryMap_CategoryMapItem", Storage="_CategoryMapItems", ThisKey="Id", OtherKey="CategoryMapId")]
		public EntitySet<CategoryMapItem> CategoryMapItems
		{
			get
			{
				return this._CategoryMapItems;
			}
			set
			{
				this._CategoryMapItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CategoryMap", Storage="_Category", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.CategoryMaps.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.CategoryMaps.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CategoryMapItems(CategoryMapItem entity)
		{
			this.SendPropertyChanging();
			entity.CategoryMap = this;
		}
		
		private void detach_CategoryMapItems(CategoryMapItem entity)
		{
			this.SendPropertyChanging();
			entity.CategoryMap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bills")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AuthorId;
		
		private decimal _Amount;
		
		private bool _Payed;
		
		private string _ActivationTarget;
		
		private int _ActivationAmount;
		
		private int _ActivationTargetId;
		
		private bool _Activated;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateActivated;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAuthorIdChanging(int value);
    partial void OnAuthorIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnActivationTargetChanging(string value);
    partial void OnActivationTargetChanged();
    partial void OnActivationAmountChanging(int value);
    partial void OnActivationAmountChanged();
    partial void OnActivationTargetIdChanging(int value);
    partial void OnActivationTargetIdChanged();
    partial void OnActivatedChanging(bool value);
    partial void OnActivatedChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateActivatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateActivatedChanged();
    #endregion
		
		public Bill()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorId", DbType="Int NOT NULL")]
		public int AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIdChanging(value);
					this.SendPropertyChanging();
					this._AuthorId = value;
					this.SendPropertyChanged("AuthorId");
					this.OnAuthorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationTarget", DbType="NVarChar(MAX)")]
		public string ActivationTarget
		{
			get
			{
				return this._ActivationTarget;
			}
			set
			{
				if ((this._ActivationTarget != value))
				{
					this.OnActivationTargetChanging(value);
					this.SendPropertyChanging();
					this._ActivationTarget = value;
					this.SendPropertyChanged("ActivationTarget");
					this.OnActivationTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationAmount", DbType="Int NOT NULL")]
		public int ActivationAmount
		{
			get
			{
				return this._ActivationAmount;
			}
			set
			{
				if ((this._ActivationAmount != value))
				{
					this.OnActivationAmountChanging(value);
					this.SendPropertyChanging();
					this._ActivationAmount = value;
					this.SendPropertyChanged("ActivationAmount");
					this.OnActivationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationTargetId", DbType="Int NOT NULL")]
		public int ActivationTargetId
		{
			get
			{
				return this._ActivationTargetId;
			}
			set
			{
				if ((this._ActivationTargetId != value))
				{
					this.OnActivationTargetIdChanging(value);
					this.SendPropertyChanging();
					this._ActivationTargetId = value;
					this.SendPropertyChanged("ActivationTargetId");
					this.OnActivationTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activated", DbType="Bit NOT NULL")]
		public bool Activated
		{
			get
			{
				return this._Activated;
			}
			set
			{
				if ((this._Activated != value))
				{
					this.OnActivatedChanging(value);
					this.SendPropertyChanging();
					this._Activated = value;
					this.SendPropertyChanged("Activated");
					this.OnActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateActivated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateActivated
		{
			get
			{
				return this._DateActivated;
			}
			set
			{
				if ((this._DateActivated != value))
				{
					this.OnDateActivatedChanging(value);
					this.SendPropertyChanging();
					this._DateActivated = value;
					this.SendPropertyChanged("DateActivated");
					this.OnDateActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bill", Storage="_User", ThisKey="AuthorId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._AuthorId = value.Id;
					}
					else
					{
						this._AuthorId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Key;
		
		private string _Value;
		
		private string _Type;
		
		private string _DisplayName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserBanners")]
	public partial class UserBanner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _ImageUrl;
		
		private string _Text;
		
		private string _Position;
		
		private string _Size;
		
		private string _Color;
		
		private bool _Enabled;
		
		private System.Nullable<int> _Height;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    #endregion
		
		public UserBanner()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(MAX)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(255)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserBanner", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Banner = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Banner = this;
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
